{"version":3,"sources":["components/svg/Logo.svg","components/svg/addUsers.svg","components/svg/listOfUsers.svg","components/svg/test.jpg","redux/reducer.js","redux/Actions.js","redux/store.js","components/Header/index.js","Validation/index.js","components/Avatar.js","components/LoginForm/index.js","components/ProfileForm/index.js","components/ContactsForm/index.js","components/CapabilitiesForm/index.js","components/Tabs/index.js","Pages/addUser/index.js","components/ListOfUsers/index.js","Pages/listUsers/index.js","App/index.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","locStorage","JSON","parse","localStorage","getItem","Data","reducerData","stateCopy","state","action","type","length","newUser","id","users","userName","passwords","password","confirmPasswords","confirmPassword","firstName","lastName","email","address","sex","company","github","facebook","language","fax","phoneOne","lastElement","filter","task","index","taskId","rootReducer","combineReducers","form","formReducer","store","createStore","applyMiddleware","getState","next","returnValue","serialObj","stringify","setItem","serialObjForm","Header","className","src","Logo","activeClassName","to","addUsers","listOfUsers","asyncValidate","values","ms","Promise","resolve","setTimeout","then","includes","useStyles","makeStyles","bigAvatar","margin","width","height","ImageAvatars","classes","Grid","container","justify","alignItems","Avatar","alt","test123","renderTextField","label","input","meta","touched","invalid","error","custom","TextField","placeholder","helperText","variant","LoginForm","props","handleSubmit","pristine","submitting","onSubmit","Field","name","component","disabled","reduxForm","validate","errors","forEach","field","floatingLabelText","errorText","radioButton","rest","FormControl","RadioGroup","FormControlLabel","value","control","Radio","ProfileForm","test","renderSelectField","children","InputLabel","htmlFor","Select","native","inputProps","FormHelperText","renderFromHelper","renderMaskField","mask","maskChar","selectorLogin","formValueSelector","selectorProfile","selectorContacts","ContactsForm","userNameValue","passwordValue","confirmPasswordValue","firstNameValue","lastNameValue","emailValue","addressValue","sexValue","companyValue","githubValue","facebookValue","languageValue","faxValue","phoneOneValue","AddUser","style","onClick","console","log","connect","dispatch","onAddUser","skills","ReduxFormSelect","options","onChange","onBlur","CapabilitiesForm","this","skillsValue","notesValue","alert","Component","TabPanel","other","Typography","role","hidden","aria-labelledby","Box","p","a11yProps","theme","root","flexGrow","backgroundColor","palette","background","paper","SimpleTabs","React","useState","setValue","AppBar","position","Tabs","event","newValue","aria-label","Tab","overflowX","marginTop","marginLeft","marginRight","table","minWidth","backTableRoot","color","link","textDecoration","CustomizedTables","DataUser","map","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","key","scope","ListUsers","App","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","basename","document","getElementById","subscribe","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.60e43a9e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.2551f83e.svg\";","module.exports = __webpack_public_path__ + \"static/media/addUsers.7e9d623d.svg\";","module.exports = __webpack_public_path__ + \"static/media/listOfUsers.f41d10ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/test.1a20d163.jpg\";","import { DELETE, ADD } from './Actions';\r\n\r\nconst locStorage = JSON.parse(localStorage.getItem('key'));\r\nlet initialState;\r\nif (!locStorage) {\r\n  initialState = {\r\n    Data: [],\r\n  };\r\n} else {\r\n  initialState = {\r\n    Data: locStorage.Data,\r\n  };\r\n}\r\nconst reducerData = (state = initialState, action) => {\r\n    let stateCopy;\r\n  switch (action.type) {\r\n        case ADD:\r\n        if (state.Data.length === 0) {\r\n          const newUser = {\r\n            id: 0,\r\n            users: action.userName,\r\n            passwords: action.password,\r\n            confirmPasswords: action.confirmPassword,\r\n            firstName: action.firstName,\r\n            lastName: action.lastName,\r\n            email: action.email,\r\n            address: action.address,\r\n            sex: action.sex,\r\n            company: action.company,\r\n            github: action.github,\r\n            facebook: action.facebook,\r\n            language: action.language,\r\n            fax: action.fax,\r\n            phoneOne: action.phoneOne,\r\n          };\r\n          stateCopy = {\r\n            ...state,\r\n            Data: [...state.Data, newUser],\r\n          };\r\n        } else {\r\n          const lastElement = state.Data[state.Data.length - 1].id;\r\n          const newUser = {\r\n            id: lastElement + 1,\r\n            users: action.userName,\r\n            passwords: action.password,\r\n            confirmPasswords: action.confirmPassword,\r\n            firstName: action.firstName,\r\n            lastName: action.lastName,\r\n            email: action.email,\r\n            address: action.address,\r\n            sex: action.sex,\r\n            company: action.company,\r\n            github: action.github,\r\n            facebook: action.facebook,\r\n            language: action.language,\r\n            fax: action.fax,\r\n            phoneOne: action.phoneOne,\r\n          };\r\n          stateCopy = {\r\n            ...state,\r\n            Data: [...state.Data, newUser],\r\n          };\r\n        }\r\n        return stateCopy;\r\n    \r\n    case DELETE:\r\n      return {\r\n        ...state,\r\n        Data: state.Data.filter((task, index) => index !== action.taskId),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n\r\nexport default reducerData;","export const DELETE = 'DELETE';\r\nexport const ADD = 'ADD';\r\n\r\nexport const onDeleteTask = taskId => {\r\n  return {\r\n    type: DELETE,\r\n    taskId,\r\n  };\r\n};\r\nexport const onAddUser = (userName, password, confirmPassword, firstName, lastName, email, address, sex,company, github, facebook, language, fax, phoneOne) => {\r\n  return {\r\n      type: ADD,\r\n      userName,\r\n      password,\r\n      confirmPassword,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      address,\r\n      sex,\r\n      company,\r\n      github,\r\n      facebook,\r\n      language,\r\n      fax,\r\n      phoneOne\r\n  };\r\n};\r\n\r\n","import { reducer as formReducer } from 'redux-form';\r\nimport { combineReducers , createStore, applyMiddleware } from 'redux';\r\n\r\nimport reducerData from './reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  reducerData, \r\n  form: formReducer,\r\n});\r\n\r\n\r\nfunction logger({ getState }) {\r\n  return next => action => {\r\n    const returnValue = next(action);\r\n    const serialObj = JSON.stringify(getState().reducerData);\r\n    localStorage.setItem('key', serialObj);\r\n    const serialObjForm = JSON.stringify(getState().form);\r\n    localStorage.setItem('form', serialObjForm);\r\n\r\n    return returnValue;\r\n  };\r\n}\r\n\r\n// eslint-disable-next-line no-underscore-dangle\r\nconst store = createStore(rootReducer, applyMiddleware(logger));\r\nexport default store;","import React from \"react\";\r\n import { NavLink } from \"react-router-dom\";\r\nimport '../Header/style.css';\r\n\r\nimport  Logo  from \"../svg/Logo.svg\";\r\nimport  addUsers  from \"../svg/addUsers.svg\";\r\nimport listOfUsers from '../svg/listOfUsers.svg';\r\n\r\nfunction Header() {\r\n    return(\r\n      <header className= \"header\">\r\n      <div className=\"header-logo\"><img src={Logo} /></div>\r\n\r\n      <NavLink className=\"add-user\" activeClassName='active' to=\"/addUser\"><div >\r\n<img src={addUsers} /> \r\n{' '}\r\n<span>Add new user</span>\r\n</div></NavLink>\r\n<NavLink className=\"list-ofUsers\" activeClassName='active' to=\"/listUsers\"><div >\r\n<img src={listOfUsers} /> \r\n{' '}\r\n<span>List of users</span>\r\n</div>\r\n</NavLink>\r\n    </header>\r\n    );\r\n}\r\nexport default Header;","const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\nconst asyncValidate = (values) => {\r\n  return sleep(1000).then(() => {\r\n    // simulate server latency\r\n    if (['foo@foo.com', 'bar@bar.com'].includes(values.email)) {\r\n      // eslint-disable-next-line no-throw-literal\r\n      throw { email: 'Email already Exists' };\r\n    }\r\n  });\r\n};\r\n\r\nexport default asyncValidate;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport test123 from \"./svg/test.jpg\"\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  bigAvatar: {\r\n    margin: 10,\r\n    width: 200,\r\n    height: 200,\r\n  },\r\n});\r\n\r\nexport default function ImageAvatars() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container justify=\"center\" alignItems=\"center\">\r\n      <Avatar alt=\"Remy Sharp\" src={test123} className={classes.bigAvatar} />\r\n    </Grid>\r\n  );\r\n}","import React from 'react';\r\nimport { Field, reduxForm, formValueSelector } from 'redux-form';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { connect } from 'react-redux';\r\nimport asyncValidate from '../../Validation/index';\r\nimport \"./loginForm.css\";\r\nimport ImageAvatars from \"../Avatar\";\r\nimport {onAddUser} from '../../redux/Actions';\r\n\r\n\r\nconst validate = values => {\r\n  const errors = {};\r\n  const requiredFields = [\r\n    'userName',\r\n    'password',\r\n    'confirmPassword'\r\n  ];\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = 'Required';\r\n    }\r\n  });\r\n  if (!values.password ) {\r\n    errors.password = 'Required';\r\n  }\r\n  if( values.password !== values.confirmPassword)\r\n  {\r\n    errors.confirmPassword = 'Password\\'s don\\'t match ';\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst renderTextField = ({\r\n  label,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  ...custom\r\n}) => (\r\n  <TextField\r\n    label={label}\r\n    placeholder={label}\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    variant=\"outlined\"\r\n    className=\"input\"\r\n  />\r\n);\r\n/* const selector = formValueSelector('loginForm');\r\n\r\nconst mapStateToProps = state => {\r\n  const userNameValue = selector(state, 'userName');\r\n  const passwordValue = selector(state, 'password');\r\n  const confirmPasswordValue = selector(state, 'confirmPassword');\r\n  return {\r\n    userNameValue, passwordValue, confirmPasswordValue\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    AddUser: (userName, password, confirmPassword) => {\r\n      dispatch(onAddUser(userName, password, confirmPassword));\r\n    },\r\n  };\r\n};\r\n*/\r\n// eslint-disable-next-line import/no-mutable-exports\r\nlet LoginForm = props => {\r\n  const { handleSubmit, pristine, submitting } = props;\r\n  return (\r\n    <div className=\"body\">\r\n      <div className=\"avatar\"><ImageAvatars /></div>\r\n      <div className=\"form\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"inputMargin\">\r\n            <Field\r\n              name=\"userName\"\r\n              component={renderTextField}\r\n              placeholder=\"userName\"\r\n            />\r\n          </div>\r\n          <div className=\"inputMargin\">\r\n            <Field name=\"password\" component={renderTextField} type=\"password\" placeholder=\"password\" />\r\n          </div>\r\n          <div className=\"inputMargin\">\r\n            <Field name=\"confirmPassword\" component={renderTextField} type=\"password\" placeholder=\"confirmPassword\"  />\r\n          </div>\r\n          <div />\r\n          <div>\r\n            <button type=\"submit\" className=\"btn-submit\" disabled={pristine || submitting}>\r\n          Forward \r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoginForm= reduxForm({\r\n  form: 'loginForm', // a unique identifier for this form\r\n  validate,\r\n  asyncValidate\r\n})(LoginForm);\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm,formValueSelector } from 'redux-form';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport DatePicker from 'react-date-picker';\r\nimport asyncValidate from '../../Validation/index';\r\nimport \"./profileForm.css\";\r\nimport {onAddUser} from '../../redux/Actions';\r\n\r\nconst validate = values => {\r\n  const errors = {};\r\n  const requiredFields = [ 'firstName', 'lastName', 'email',  'address', 'sex' ];\r\n  requiredFields.forEach(field => {\r\n    if (!values[ field ]) {\r\n      errors[ field ] = 'Required';\r\n    }\r\n  });\r\n  if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    errors.email = 'Invalid email address';\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst renderTextField = ({ input, label, meta: { touched, error }, ...custom }) => (\r\n  <TextField\r\n    label={label}\r\n    floatingLabelText={label}\r\n    errorText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    variant=\"outlined\"\r\n    className=\"input-profile\"\r\n  />\r\n);\r\n\r\nconst radioButton = ({ input, ...rest }) => (\r\n  <FormControl>\r\n    <RadioGroup {...input} {...rest}>\r\n      <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n      <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n    </RadioGroup>\r\n  </FormControl>\r\n);\r\n/*\r\nconst selectorDo = formValueSelector('loginForm');\r\nconst selector = formValueSelector('profileForm');\r\n\r\nconst mapStateToProps = state => {\r\n  const userNameValue = selectorDo(state, 'userName');\r\n  const passwordValue = selectorDo(state, 'password');\r\n  const confirmPasswordValue = selectorDo(state, 'confirmPassword');\r\n  const firstNameValue = selector(state, 'firstName');\r\n  const lastNameValue = selector(state, 'lastName');\r\n  const emailValue = selector(state, 'email');\r\n  const addressValue = selector(state, 'address');\r\n  const sexValue = selector(state, 'sex');\r\n  return {\r\n    userNameValue, passwordValue, confirmPasswordValue, firstNameValue, lastNameValue, emailValue, addressValue, sexValue\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    AddUser: (userName, password, confirmPassword, firstName, lastName, email, address, sex) => {\r\n      dispatch(onAddUser(userName, password, confirmPassword, firstName, lastName, email, address, sex));\r\n    },\r\n  };\r\n};\r\n*/\r\n\r\n// eslint-disable-next-line import/no-mutable-exports\r\nlet ProfileForm = props => {\r\n  const { handleSubmit, pristine, submitting} = props;\r\n   /* const submitData =() => {\r\n    AddUser(userNameValue, passwordValue,\r\n      confirmPasswordValue, firstNameValue, lastNameValue, emailValue, addressValue, sexValue );\r\n  };\r\n  */\r\n  return (\r\n    <div className=\"AccountForm\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"firstColumn\">\r\n          <div className=\"inputMargin\">\r\n            <Field name=\"firstName\" component={renderTextField} label=\"First Name\" />\r\n          </div>\r\n          <div className=\"inputMargin\">\r\n            <Field name=\"lastName\" component={renderTextField} label=\"Last Name\" />\r\n          </div>\r\n          <div className=\"inputMargin\">\r\n            <DatePicker />\r\n          </div>\r\n        </div>\r\n        <div className=\"secondColumn\">\r\n          <div className=\"inputMargin\">\r\n            <Field name=\"email\" component={renderTextField} label=\"Email\" />\r\n          </div>\r\n          <div className=\"inputMargin\">\r\n            <Field name=\"address\" component={renderTextField} label=\"Address\" />\r\n          </div>\r\n          <div className=\"radio\">\r\n            <Field name=\"sex\" component={radioButton}>\r\n              <Radio value=\"male\" label=\"male\" />\r\n              <Radio value=\"female\" label=\"female\" />\r\n            </Field>\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\" disabled={pristine || submitting} className=\"btn-profile\">Forward</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileForm = reduxForm({\r\n  form: 'profileForm',  // a unique identifier for this form\r\n  validate,\r\n  asyncValidate\r\n})(ProfileForm);\r\n\r\n/* ProfileForm = connect(mapStateToProps,\r\n  mapDispatchToProps)(ProfileForm);\r\n  */\r\n\r\nexport default ProfileForm;","import React from 'react';\r\nimport { Field, reduxForm, formValueSelector } from 'redux-form';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputMask from 'react-input-mask';\r\nimport MaterialInput from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport { connect } from 'react-redux';\r\nimport asyncValidate from '../../Validation/index';\r\nimport \"./contactsForm.css\";\r\nimport {onAddUser} from '../../redux/Actions';\r\n\r\n\r\n/* const options = [\r\n  {value: \"en\", label: \"English\"},\r\n  {value: \"fr\", label: \"French\"},\r\n  {value: \"es\", label: \"Spanish\"},\r\n  {value: \"ar\", label: \"Arabic\"},\r\n  {value: \"cmn\", label: \"Mandarin\"},\r\n  {value: \"ru\", label: \"Russian\"},\r\n  {value: \"pt\", label: \"Portuguese\"},\r\n  {value: \"de\", label: \"German\"},\r\n  {value: \"ja\", label: \"Japanese\"},\r\n  {value: \"hi\", label: \"Hindi\"},\r\n  {value: \"ms\", label: \"Malay\"},\r\n  {value: \"fa\", label: \"Persian\"},\r\n  {value: \"sw\", label: \"Swahili\"},\r\n  {value: \"ta\", label: \"Tamil\"},\r\n  {value: \"it\", label: \"Italian\"},\r\n  {value: \"nl\", label: \"Dutch\"},\r\n  {value: \"tr\", label: \"Turkish\"},\r\n  {value: \"vi\", label: \"Vietnamese\"},\r\n  {value: \"pl\", label: \"Polish\"},\r\n  {value: \"jv\", label: \"Javanese\"},\r\n  {value: \"pa\", label: \"Punjabi\"},\r\n  {value: \"th\", label: \"Thai\"},\r\n  {value: \"ko\", label: \"Korean\"},\r\n];\r\n*/\r\n\r\nconst validate = values => {\r\n  const errors = {};\r\n  const requiredFields = [\r\n    'firstName',\r\n    'lastName',\r\n    'email',\r\n    'favoriteColor',\r\n    'notes'\r\n  ];\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = 'Required';\r\n    }\r\n  });\r\n  if (\r\n    values.email &&\r\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n  ) {\r\n    errors.email = 'Invalid email address';\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst renderTextField = ({\r\n  label,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  ...custom\r\n}) => (\r\n  <TextField\r\n    label={label}\r\n    placeholder={label}\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    variant=\"outlined\"\r\n  />\r\n);\r\nconst renderFromHelper = ({ touched, error }) => {\r\n  if (!(touched && error)) {\r\n  } else {\r\n    return <FormHelperText>{touched && error}</FormHelperText>;\r\n  }\r\n};\r\n\r\nconst renderSelectField = ({\r\n  input,\r\n  label,\r\n  meta: { touched, error },\r\n  children,\r\n  ...custom\r\n}) => (\r\n  <FormControl error={touched && error}>\r\n    <InputLabel htmlFor=\"main-language\">Main Language</InputLabel>\r\n    <Select\r\n      native\r\n      {...input}\r\n      {...custom}\r\n      inputProps={{\r\n        name: 'main-language',\r\n        id: 'main-language'\r\n      }}\r\n    >\r\n      {children}\r\n    </Select>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n);\r\n\r\n/* const MaskInput = (props) => (\r\n  <InputMask mask=\"+7 (999) 999-99-99\" value={props.value} onChange={props.onChange}>\r\n    {(inputProps) => <MaterialInput {...inputProps} type=\"tel\" disableUnderline />}\r\n  </InputMask>\r\n);\r\n*/\r\nconst renderMaskField = ({\r\n  label,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  ...custom\r\n}) => (\r\n  <TextField\r\n    label={label}\r\n    placeholder={label}\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    variant=\"outlined\"\r\n  >\r\n    {() => <InputMask mask=\"+7(999)-99-99\" maskChar=\" \" />}\r\n    \r\n  </TextField>\r\n);\r\n\r\n\r\n\r\nconst selectorLogin = formValueSelector('loginForm');\r\nconst selectorProfile = formValueSelector('profileForm');\r\nconst selectorContacts = formValueSelector('contactsForm');\r\n\r\nconst mapStateToProps = state => {\r\n  const userNameValue = selectorLogin(state, 'userName');\r\n  const passwordValue = selectorLogin(state, 'password');\r\n  const confirmPasswordValue = selectorLogin(state, 'confirmPassword');\r\n  const firstNameValue = selectorProfile(state, 'firstName');\r\n  const lastNameValue = selectorProfile(state, 'lastName');\r\n  const emailValue = selectorProfile(state, 'email');\r\n  const addressValue = selectorProfile(state, 'address');\r\n  const sexValue = selectorProfile(state, 'sex');\r\n  const companyValue = selectorContacts(state, 'company');\r\n  const githubValue = selectorContacts(state, 'github');\r\n  const facebookValue = selectorContacts(state, 'facebook');\r\n  const languageValue = selectorContacts(state, 'language');\r\n  const faxValue = selectorContacts(state, 'fax');\r\n  const phoneOneValue = selectorContacts(state, 'phoneOne');\r\n\r\n  return {\r\n    userNameValue, passwordValue, confirmPasswordValue, firstNameValue, lastNameValue, emailValue, addressValue, sexValue,\r\n    companyValue, githubValue, facebookValue, languageValue, faxValue, phoneOneValue,\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    AddUser: (userName, password, confirmPassword, firstName, lastName, email, address, sex, company, github, facebook, language, fax, phoneOne) => {\r\n      dispatch(onAddUser(userName, password, confirmPassword, firstName, lastName, email, address, sex, company, github, facebook, language, fax, phoneOne));\r\n    },\r\n  };\r\n};\r\n\r\n// eslint-disable-next-line import/no-mutable-exports\r\nlet ContactsForm = props => {\r\n  const { handleSubmit, pristine, submitting, userNameValue, passwordValue,\r\n    confirmPasswordValue, firstNameValue, lastNameValue, emailValue, addressValue, sexValue, companyValue, githubValue, facebookValue, languageValue,\r\n faxValue, phoneOneValue, AddUser } = props;\r\n  const submitData =() => {\r\n     AddUser(userNameValue, passwordValue,\r\n      confirmPasswordValue, firstNameValue, lastNameValue, emailValue, addressValue, sexValue, companyValue, githubValue, facebookValue, languageValue,\r\n faxValue, phoneOneValue);\r\n console.log(faxValue);\r\n  };\r\n  return (\r\n    <div className=\"body\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"inputMargin\">\r\n          <Field name=\"company\" component={renderTextField} label=\"Company\" />\r\n        </div>\r\n        <div className=\"inputMargin\">\r\n          <Field name=\"github\" component={renderTextField} label=\"GitHub link\" />\r\n        </div>\r\n        <div className=\"inputMargin\">\r\n          <Field name=\"facebook\" component={renderTextField} label=\"Facebook link\" />\r\n        </div>\r\n        <div className=\"inputMargin\">\r\n          <Field\r\n            className=\"lang\"\r\n            name=\"language\"\r\n            component={renderSelectField}\r\n            label=\"Main Language\"\r\n          >\r\n            <option value=\"\" />\r\n            <option value=\"en\">English</option>\r\n            <option value=\"fr\">French</option>\r\n            <option value=\"es\">Spanish</option>\r\n            <option value=\"ar\">Arabic</option>\r\n            <option value=\"cmn\">Mandarin</option>\r\n            <option value=\"ru\">Russian</option>\r\n            <option value=\"pt\">Portuguese</option>\r\n            <option value=\"de\">German</option>\r\n            <option value=\"ja\">Japanese</option>\r\n          </Field>\r\n        \r\n        </div>\r\n        <span>Fax</span>\r\n        <div className=\"inputMargin\">\r\n          <Field name=\"fax\" component={renderMaskField} label=\"fax\" />\r\n        </div>\r\n        <span>Phone#1</span>\r\n        <div className=\"inputMargin\">\r\n          <InputMask name=\"phoneOne\" mask=\"+7 (999) 999-99-99\" style={{width:300, height: 30}} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\" disabled={pristine || submitting} className=\"btn-contacts\" onClick={submitData}>\r\n          Forward\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactsForm= reduxForm({\r\n  form: 'contactsForm', // a unique identifier for this form\r\n  validate,\r\n  asyncValidate\r\n})(ContactsForm);\r\n\r\nContactsForm = connect( mapStateToProps, mapDispatchToProps)(ContactsForm);\r\n\r\nexport default ContactsForm;\r\n","import React, { Component } from 'react';\r\nimport { Field, reduxForm,formValueSelector } from 'redux-form';\r\nimport Select from 'react-select';\r\nimport \"./capabilitiesForm.css\";\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nconst skills =[\r\n    { value: 'HTML', label: 'HTML' },\r\n    { value: 'CSS', label: 'CSS' },\r\n    { value: 'Javascript', label: 'Javascript' },\r\n    { value: 'React', label: 'React' },\r\n    { value: 'Angular', label: 'Angular' },\r\n];\r\n\r\nconst ReduxFormSelect = props => {\r\n  const { input, options } = props;\r\n\r\n  return (\r\n    <Select \r\n      {...input} \r\n      onChange={value => input.onChange(value)} \r\n      onBlur={() => input.onBlur(input.value)} \r\n      options={options}\r\n    />\r\n  );\r\n};\r\n\r\nconst selectorLogin = formValueSelector('capabilitiesForm');\r\n\r\nconst mapStateToProps = state => {\r\n  const skillsValue = selectorLogin(state, 'skills');\r\n  const notesValue = selectorLogin(state, 'notes');\r\n  return {\r\n    skillsValue, notesValue\r\n  };\r\n};\r\n// eslint-disable-next-line react/prefer-stateless-function\r\nclass CapabilitiesForm extends Component {\r\n  render() {\r\n    const { handleSubmit, skillsValue, notesValue} = this.props;\r\n    const submitData =()=>{\r\n      alert(skillsValue.value);\r\n    };\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"CapabilitiesForm\">\r\n          <div className=\"firstColumn\">\r\n            <div className=\"lang\">\r\n              <Field\r\n                className=\"lang\"\r\n                name=\"skills\"\r\n                component={ReduxFormSelect}\r\n                label=\"Skills\"\r\n                options={skills}\r\n              />\r\n\r\n            </div>\r\n            <span>Addtional information</span>\r\n            <div>\r\n              <Field name=\"notes\" component=\"textarea\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"secondColumn\">\r\n            <div>\r\n              <button type=\"submit\" className=\"btn-contacts\" onClick={submitData}>\r\n          Forward\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nCapabilitiesForm = reduxForm({\r\n  form: 'capabilitiesForm',\r\n})(CapabilitiesForm);\r\n\r\nCapabilitiesForm = connect(mapStateToProps)(CapabilitiesForm);\r\n\r\nexport default CapabilitiesForm;\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport LoginForm from \"../LoginForm\";\r\nimport ProfileForm from \"../ProfileForm\";\r\nimport ContactsForm from \"../ContactsForm\";\r\nimport CapabilitiesForm from \"../CapabilitiesForm\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      <Box p={3}>{children}</Box>\r\n    </Typography>\r\n  );\r\n}\r\n\r\n/* TabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n*/\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function SimpleTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" variant=\"fullWidth\">\r\n          <Tab label=\"1. Account\" {...a11yProps(0)} />\r\n          <Tab label=\"2. Profile\" {...a11yProps(1)} />\r\n          <Tab label=\"3. Contacts\" {...a11yProps(2)} />\r\n          <Tab label=\"4. Capabilities\" {...a11yProps(3)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <LoginForm />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <ProfileForm />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <ContactsForm />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <CapabilitiesForm />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport Header from \"../../components/Header\";\r\nimport SimpleTabs from \"../../components/Tabs\";\r\n\r\n\r\nfunction AddUser() {\r\n    return(\r\n      <div>\r\n        <Header />\r\n        <h1>Add User Page</h1>\r\n        <SimpleTabs />\r\n      </div>\r\n    );\r\n}\r\nexport default AddUser;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    width: '80%',\r\n    overflowX: 'auto',\r\n    marginTop: 30,\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  backTableRoot: {\r\n    background: 'white',\r\n    color: 'silver',\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n  },\r\n}));\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      Data: state.reducerData.Data,\r\n    };\r\n  };\r\n\r\n function CustomizedTables(props) {\r\n  const { Data } = props;\r\n  const classes = useStyles();\r\n  const DataUser = Data.map(task => {\r\n    const { users } = task;\r\n    const {firstName} = task;\r\n    const {lastName}=task;\r\n    const {company} = task;\r\n    const data = { users, firstName, lastName,company };\r\n    return data;\r\n  });\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow className={classes.backTableRoot}>\r\n            <TableCell align=\"left\" variant=\"head\">\r\n              №\r\n            </TableCell>\r\n            <TableCell align=\"left\" variant=\"head\">\r\n              Tasks\r\n            </TableCell>\r\n            <TableCell align=\"left\" variant=\"head\">\r\n              first Name\r\n            </TableCell>\r\n            <TableCell align=\"left\" variant=\"head\">\r\n              last Name\r\n            </TableCell>\r\n            <TableCell align=\"left\" variant=\"head\">\r\n            company\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {DataUser.map((task, index) => (\r\n            <TableRow key={task.id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {index + 1}\r\n              </TableCell>\r\n              <TableCell align=\"left\">{task.users}</TableCell>\r\n              <TableCell align=\"left\">{task.firstName}</TableCell>\r\n              <TableCell align=\"left\">{task.lastName}</TableCell>\r\n              <TableCell align=\"left\">{task.company}</TableCell>\r\n\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\nCustomizedTables = connect(mapStateToProps)(CustomizedTables);\r\nexport default CustomizedTables;\r\n","import React from \"react\";\r\nimport Header from \"../../components/Header\";\r\nimport CustomizedTables from \"../../components/ListOfUsers/index\";\r\n\r\n\r\nfunction ListUsers() {\r\n    return(\r\n      <div>\r\n        <Header />\r\n        <CustomizedTables />\r\n      </div>\r\n    );\r\n}\r\nexport default ListUsers;","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport AddUser from '../Pages/addUser';\r\nimport ListUsers from \"../Pages/listUsers\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() => <Redirect to=\"/listUsers\" />} />\r\n        <Route path=\"/addUser\" component={AddUser} />\r\n        <Route path=\"/listUsers\" component={ListUsers} />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from \"./redux/store\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nexport const render = state => {\nReactDOM.render(\n  <Provider store={store}>       \n    <BrowserRouter basename=\"/Account_manager/\">\n      <App />\n    </BrowserRouter>\n  </Provider>, document.getElementById('root'));\n};\n\nrender(store.getState());\nstore.subscribe(() => {\n  render(store.getState());\n});\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}